
#print('interaction.cross_init starting')


SequenceMessage.exchangeContext.eType = Constraint
SequenceMessage.sendingEnd.eType = MessageEnd
SequenceMessage.receivingEnd.eType = MessageEnd
SequenceMessage._invokedOperation.eType = AbstractEventOperation
SequenceMessage.exchangedItems.eType = ExchangeItem
SequenceMessage._sendingPart.eType = Part
SequenceMessage._receivingPart.eType = Part
SequenceMessage._sendingFunction.eType = AbstractFunction
SequenceMessage._receivingFunction.eType = AbstractFunction
SequenceMessage.ownedSequenceMessageValuations.eType = SequenceMessageValuation
Scenario.preCondition.eType = Constraint
Scenario.postCondition.eType = Constraint
Scenario.ownedInstanceRoles.eType = InstanceRole
Scenario.ownedMessages.eType = SequenceMessage
Scenario.ownedInteractionFragments.eType = InteractionFragment
Scenario.ownedTimeLapses.eType = TimeLapse
Scenario.ownedEvents.eType = Event
Scenario.ownedFormalGates.eType = Gate
Scenario.ownedScenarioRealization.eType = ScenarioRealization
Scenario.ownedConstraintDurations.eType = ConstraintDuration
Scenario.containedFunctions.eType = AbstractFunction
Scenario.containedParts.eType = Part
Scenario.referencedScenarios.eType = Scenario
MessageEnd._message.eType = SequenceMessage
Execution._covered.eType = InstanceRole
ExecutionEnd._execution.eType = Execution
InstanceRole.representedInstance.eType = AbstractInstance
AbstractEnd.event.eType = Event
EventReceiptOperation.operation.eType = AbstractEventOperation
EventSentOperation.operation.eType = AbstractEventOperation
AbstractCapability.preCondition.eType = Constraint
AbstractCapability.postCondition.eType = Constraint
AbstractCapability.ownedScenarios.eType = Scenario
AbstractCapability.extends.eType = AbstractCapabilityExtend
AbstractCapability.extending.eType = AbstractCapabilityExtend
AbstractCapability.abstractCapabilityExtensionPoints.eType = AbstractCapabilityExtensionPoint
AbstractCapability.superGeneralizations.eType = AbstractCapabilityGeneralization
AbstractCapability.subGeneralizations.eType = AbstractCapabilityGeneralization
AbstractCapability.includes.eType = AbstractCapabilityInclude
AbstractCapability.including.eType = AbstractCapabilityInclude
AbstractCapability.super.eType = AbstractCapability
AbstractCapability.sub.eType = AbstractCapability
AbstractCapability.includedAbstractCapabilities.eType = AbstractCapability
AbstractCapability.includingAbstractCapabilities.eType = AbstractCapability
AbstractCapability.extendedAbstractCapabilities.eType = AbstractCapability
AbstractCapability.extendingAbstractCapabilities.eType = AbstractCapability
AbstractCapability.ownedFunctionalChainAbstractCapabilityInvolvements.eType = FunctionalChainAbstractCapabilityInvolvement
AbstractCapability.ownedAbstractFunctionAbstractCapabilityInvolvements.eType = AbstractFunctionAbstractCapabilityInvolvement
AbstractCapability.availableInStates.eType = State
AbstractCapability.ownedAbstractCapabilityRealizations.eType = AbstractCapabilityRealization
AbstractCapability.involvedAbstractFunctions.eType = AbstractFunction
AbstractCapability.involvedFunctionalChains.eType = FunctionalChain
AbstractCapabilityExtend.extended.eType = AbstractCapability
AbstractCapabilityExtend._extension.eType = AbstractCapability
AbstractCapabilityExtensionPoint._abstractCapability.eType = AbstractCapability
AbstractCapabilityGeneralization.super.eType = AbstractCapability
AbstractCapabilityGeneralization._sub.eType = AbstractCapability
AbstractCapabilityInclude.included.eType = AbstractCapability
AbstractCapabilityInclude._inclusion.eType = AbstractCapability
InteractionFragment.coveredInstanceRoles.eType = InstanceRole
InteractionState.relatedAbstractState.eType = AbstractState
InteractionState.relatedAbstractFunction.eType = AbstractFunction
InteractionState._covered.eType = InstanceRole
InteractionUse.referencedScenario.eType = Scenario
InteractionUse.actualGates.eType = Gate
CombinedFragment.referencedOperands.eType = InteractionOperand
CombinedFragment.expressionGates.eType = Gate
InteractionOperand.referencedInteractionFragments.eType = InteractionFragment
InteractionOperand.guard.eType = Constraint
TimeLapse.start.eType = InteractionFragment
TimeLapse.finish.eType = InteractionFragment
AbstractFragment.ownedGates.eType = Gate
FragmentEnd._abstractFragment.eType = AbstractFragment
FunctionalChainAbstractCapabilityInvolvement._capability.eType = AbstractCapability
FunctionalChainAbstractCapabilityInvolvement._functionalChain.eType = FunctionalChain
AbstractFunctionAbstractCapabilityInvolvement._capability.eType = AbstractCapability
AbstractFunctionAbstractCapabilityInvolvement._function.eType = AbstractFunction
ScenarioRealization._realizedScenario.eType = Scenario
ScenarioRealization._realizingScenario.eType = Scenario
StateFragment.relatedAbstractState.eType = AbstractState
StateFragment.relatedAbstractFunction.eType = AbstractFunction
ConstraintDuration.start.eType = InteractionFragment
ConstraintDuration.finish.eType = InteractionFragment
SequenceMessageValuation.exchangeItemElement.eType = ExchangeItemElement
SequenceMessageValuation.value.eType = ValueSpecification
Scenario.realizedScenarios.eType = Scenario
Scenario.realizingScenarios.eType = Scenario
Scenario.realizingScenarios.eOpposite = Scenario.realizedScenarios
InstanceRole.abstractEnds.eType = AbstractEnd
AbstractEnd._covered.eType = InstanceRole
AbstractEnd._covered.eOpposite = InstanceRole.abstractEnds
AbstractCapabilityRealization._realizedCapability.eType = AbstractCapability
AbstractCapabilityRealization._realizingCapability.eType = AbstractCapability
AbstractCapability.incomingCapabilityAllocation.eType = AbstractCapabilityRealization
AbstractCapability.incomingCapabilityAllocation.eOpposite = AbstractCapabilityRealization.realizedCapability
AbstractCapability.outgoingCapabilityAllocation.eType = AbstractCapabilityRealization
AbstractCapability.outgoingCapabilityAllocation.eOpposite = AbstractCapabilityRealization.realizingCapability
AbstractCapabilityExtend.extensionLocation.eType = AbstractCapabilityExtensionPoint
AbstractCapabilityExtensionPoint.extendLinks.eType = AbstractCapabilityExtend
AbstractCapabilityExtensionPoint.extendLinks.eOpposite = AbstractCapabilityExtend.extensionLocation

#print('interaction.cross_init done')
